// draw the detections in the detected face box
canvasRef &&
  canvasRef.current &&
  faceapi.draw.drawDetections(canvasRef.current, resizedDimensions);

// draw the marks on the detected face
canvasRef &&
  canvasRef.current &&
  faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDimensions);

// draw the face expressions
canvasRef &&
  canvasRef.current &&
  faceapi.draw.drawFaceExpressions(canvasRef.current, resizedDimensions);

const loadLabeledImages = () => {
  const labels = ["Daniel", "Fokou"];

  return Promise.all(
    labels.map(async (label) => {
      const faceDescriptors = null;
      for (let i = 1; i <= 2; i++) {
        const img = await faceapi.fetchImage(`/faces/${label}/${i}.png`);

        const fullFaceDescription = await faceapi
          .detectSingleFace(img)
          .withFaceLandmarks()
          .withFaceDescriptor();

        if (!fullFaceDescription) {
          throw new Error(`no faces detected for ${label}`);
        }

        faceDescriptors = [fullFaceDescription.descriptor];
      }

      return new faceapi.LabeledFaceDescriptors(label, faceDescriptors);
    })
  );
};
